# -*- coding: utf-8 -*-
"""Proyecto Fer

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1EKZwMMLd6gtbEa01xz1w_HzIC1mFb_vE

Importamos librerias
"""

import pandas as pd
from lifestore_file import lifestore_products, lifestore_sales, lifestore_searches
import matplotlib.pyplot as plt
import os

"""#Data Frame"""

Productos=pd.DataFrame(lifestore_products)
Ventas=pd.DataFrame(lifestore_sales)
Busquedas=pd.DataFrame(lifestore_searches)

"""Nombrar columnas"""

Productos.columns=["id_product", "name", "price", "category", "stock"]
Ventas.columns=["id_sale", "id_product", "score (from 1 to 5)", "date", "refund (1 for true or 0 to false)"]
Busquedas.columns=["id_search", "id_product"]
#Productos.to_excel('example.xlsx', sheet_name='Productos')
#Ventas.to_excel('example1.xlsx', sheet_name='Ventas')
#Busquedas.to_excel('example2.xlsx', sheet_name='Busquedas')

Productos.head()
Ventas.head()
Busquedas.head()

"""1)Ventas y Rezagos"""

#Productos.iloc[:,1]
#Aqui se cuenta con devolucion 
#Cantidad_de_ventas=Ventas.id_product.value_counts(dropna=False)
#Solo contamos aquellos que no tuvieran devolucion 
Cantidad_de_ventas=Ventas[Ventas["refund (1 for true or 0 to false)"]==0]["id_product"].value_counts()

Cantidad_de_ventas=pd.DataFrame(Cantidad_de_ventas)
#Extrae el index para hacer una columna
Cantidad_de_ventas=Cantidad_de_ventas.reset_index()

Cantidad_de_ventas.columns=["id_product","N ventas"]
Cantidad_de_ventas=Cantidad_de_ventas.merge(Productos, left_on='id_product', right_on='id_product')
Cantidad_de_ventas=Cantidad_de_ventas[["id_product","name","category","N ventas"]]

"""Top 5 con mas ventas se usa **head**


"""

Top_5_mas_ventas=Cantidad_de_ventas.head(n=5)

"""Top 5 con menos ventas se usa **head**

"""

Top_5_menos_ventas=Cantidad_de_ventas.tail(n=5)

"""Mayor busqueda"""

Cantidad_de_Busquedas=Busquedas.id_product.value_counts(dropna=False)
Cantidad_de_Busquedas=pd.DataFrame(Cantidad_de_Busquedas)
#Extrae el index para hacer una columna
Cantidad_de_Busquedas=Cantidad_de_Busquedas.reset_index()

Cantidad_de_Busquedas.columns=["id_product","N busquedas"]

Cantidad_de_Busquedas=Cantidad_de_Busquedas.merge(Productos[["id_product","name"]],on='id_product')
Top_n_mayores_busquedas=Cantidad_de_Busquedas.head(n=10)
Top_n_menores_busquedas=Cantidad_de_Busquedas.tail(n=10)

Top_n_mayores_busquedas
#Top_n_menores_busquedas

"""Por categoria las cosas"""

len(Cantidad_de_ventas)

len(Productos)

Por_categoria=Cantidad_de_ventas.merge(Productos[["id_product","price","stock"]], left_on='id_product', right_on="id_product")
Por_categoria=Por_categoria.merge(Cantidad_de_Busquedas, left_on='id_product', right_on='id_product')
#Por_categoria=Por_categoria.drop(columns=["index"])

Por_categoria["Venta_final"]=Por_categoria["price"]*Por_categoria["N ventas"]
Por_categoria["Stock_final"]=Por_categoria["stock"]-Por_categoria["N ventas"]

Categorias=Por_categoria.category.unique()

"""Por menos ventas por categoria """

for categoria in Categorias:
  print(Por_categoria[Por_categoria["category"]==categoria].tail())

Por_categoria=Por_categoria.sort_values('N busquedas')

for categoria in Categorias:
  print(Por_categoria[Por_categoria["category"]==categoria].tail())

"""##Ventas por mes"""

#Se actualiza como un dato tipo fecha 
Ventas.date=pd.to_datetime(Ventas.date,infer_datetime_format=True)

#Ventas.head(n=10)

#Ventas["Mes"]=pd.DatetimeIndex(Ventas.date).month
#Ventas["Dia"]=pd.DatetimeIndex(Ventas.date).day

i=1
suma=0
#Lista guarda las ventas de cada mes
Lista=[]
for i in range(12):
  i=1+i
  #Filtro_mes sera aquel que cambien segun el mes
  Filtro_mes=pd.DatetimeIndex(Ventas.date).month==i
  #Ventas_mes se aplica el filtro con el for 
  Ventas_mes=Ventas[pd.DatetimeIndex(Ventas.date).month==i]
  #Contar ventas segun el producto
  Cantidad_de_ventas_mensuales=Ventas_mes[Ventas_mes["refund (1 for true or 0 to false)"]==0]["id_product"].value_counts(dropna=False)
  Cantidad_de_ventas_mensuales=pd.DataFrame(Cantidad_de_ventas_mensuales)
  #Extrae el index para hacer una columna
  Cantidad_de_ventas_mensuales=Cantidad_de_ventas_mensuales.reset_index()
  Cantidad_de_ventas_mensuales.columns=["id_product","N ventas"]
  #Unimos la base de ventas mensuales con la de productos para asi extraer el costo 
  Cantidad_de_ventas_mensuales=Cantidad_de_ventas_mensuales.merge(Productos, left_on='id_product', right_on='id_product')
  Cantidad_de_ventas_mensuales["Venta_final"]=Cantidad_de_ventas_mensuales.price*Cantidad_de_ventas_mensuales["N ventas"]
  #print("Mes",i)
  #print(Cantidad_de_ventas_mensuales["Venta_final"].sum())
  Lista.append([Cantidad_de_ventas_mensuales["Venta_final"].sum(),Cantidad_de_ventas_mensuales["N ventas"].sum()])

meses_ventas=pd.DataFrame(Lista)
meses_ventas.columns=["Ventas","Cantidad_de_produtos"]
meses_ventas.index=["Enero",
"Febrero",
"Marzo",
"Abril",
"Mayo",
"Junio",
"Julio",
"Agosto",
"Septiembre",
"Octubre",
"Noviembre",
"Diciembre"]
meses_ventas["Venta_promedio_producto"]=round(meses_ventas.Ventas/meses_ventas.Cantidad_de_produtos,2)
#print("Ventas mensuales son:\n\n",meses_ventas)
#print("\nVentas anuales son:",meses_ventas.Ventas.sum())

def pie_productos():
  Pie=Productos.category.value_counts(dropna=False)
  Pie=Pie.reset_index()
  Pie.columns=["Categoria","Cantidad"]
  plt.pie(Pie.Cantidad, labels=Pie.Categoria,autopct="%0.1f %%")
  plt.axis("equal")
  font1 = {'family':'serif','color':'black','size':20}
  plt.title('Distribucion por tipo de mercancia',fontdict = font1)
  #plt.show()
  return(plt.show())

def plot_ventas():
  plt.bar(meses_ventas.index,meses_ventas.Ventas)
  font1 = {'family':'serif','color':'black','size':20}
  plt.title('Ventas por mes',fontdict = font1)
  plt.xticks(rotation=45)
  return(plt.show())

"""##Productos por resena 

"""

#Los productos que tuvieron resena
Resena=Ventas
Prod_resenas=Resena.id_product.unique()
Prod_resenas

Resena_lista=[]
for Prod_resena in Prod_resenas:
  Filtro_resena=Resena["id_product"]==Prod_resena
  Datos_por_resena_producto=Resena[Filtro_resena]
  print("El producto id ",Prod_resena)
  print(Datos_por_resena_producto["score (from 1 to 5)"].value_counts(dropna=False))
  Resena_lista.append(Datos_por_resena_producto["score (from 1 to 5)"].value_counts(dropna=False))

Cal_promedio=[]
for i in range(len(Resena_lista)):
  #print("El id del producto es",Prod_resenas[i])
  Resena_producto=pd.DataFrame(Resena_lista[i]).reset_index()
  Resena_producto.columns=["Cal","Cantidad"]
  producto=Resena_producto["Cal"]*Resena_producto["Cantidad"]
  #Media ponderada
  sum_producto=producto.sum()
  sum_cal=Resena_producto["Cantidad"].sum()
  Cal_promedio.append(round(sum_producto/sum_cal,2))
Cal_promedio=pd.DataFrame(Cal_promedio)
Cal_promedio["id_product"]=Prod_resenas
Cal_promedio.columns=["Promedio de calificacion","id_product"]
Cal_promedio=Cal_promedio[["id_product","Promedio de calificacion"]]

Cal_promedio=Cal_promedio.merge(Productos, left_on='id_product', right_on='id_product')

Cal_promedio=Cal_promedio.drop(columns=["stock","price"]).sort_values('Promedio de calificacion',ascending=False)

Cal_promedio=Cal_promedio[["id_product","name","category","Promedio de calificacion"]]

#Mejor resena
Cal_promedio.head(n=5)

#Peor resena
Cal_promedio.tail(n=5)

"""##Menu"""

while(True):
  print("Escribe un usuario")
  opcion=input("Escribre s para salir o enter para continuar")
  if opcion=="s":
    break
  user="Fher"
  password="contrasena"
  usuario=str(input("Escribre el usuario:\n"))
  contrasena=str(input("Introduce tu contrasena\n"))
  if user==usuario and password==contrasena:
    while(True):
      s=input("Escribe 's' para salir del menu o c para continuar.... ")

      if s=="s":
        break
      elif s=="c":
        print("""1)	Productos más vendidos y productos rezagados\n
          a:	Lista con los 5 productos con mayores ventas
          b:	Los 10 productos con mayor número de búsquedas
          c:	Muestra los 5 productos con menores ventas con la categoría
          d:	Lista con los 10 productos de menores búsquedas\n
        2)	Productos por reseña en el servicio.\n
          e:	Lista con los 5 productos con mejor reseña
          f:	Lista con los 5 productos con peor reseña\n
        3)	Total, de ingresos y ventas promedio mensuales, total anual y meses con más ventas al año.\n
          g:	Tabla con total de ingresos y ventas mensuales
          h:	Total anual
          i:	Meses con mayores ventas\n
        """)

        Respuesta=int(input("Introduce una opcion \n"))
        ########################################################################################################################
        ########################################################################################################################
        if Respuesta==1:
          print("Productos más vendidos y productos rezagados\n")
          pie_productos()
          print("""
          a:	Lista con los 5 productos con mayores ventas
          b:	Los 10 productos con mayor número de búsquedas
          c:	Muestra los 5 productos con menores ventas con la categoría
          d:	Lista con los 10 productos de menores búsquedas
          """)
          Respuesta_1=str(input("Introduce una opcion \n"))
          print("\n"*50)
          
          if Respuesta_1=="a":
            print
            print("Top 5 de productos con mayores ventas")
            print(Top_5_mas_ventas)
            input("\nEnter para continuar...\n")
          elif Respuesta_1=="b":
            print("Top 10 productos con mayor número de búsquedas\n")
            print(Top_n_mayores_busquedas)
            input("\nEnter para continuar...\n")
          elif Respuesta_1=="c":
            print("Top 5 productos con menores ventas con la categoría\n")
            for categoria in Categorias:
              print(categoria)
              print(Por_categoria[Por_categoria["category"]==categoria].tail()[["id_product","N ventas","Venta_final","Stock_final"]])
              input("\nEnter para continuar...\n")
          elif Respuesta_1=="d":
            print("Top 10 productos de menores búsquedas\n")
            print(Top_n_menores_busquedas)
            input("\nEnter para continuar...\n")
          else:
            print("no ingresaste una opcion valida")
        ########################################################################################################################
        ########################################################################################################################

        elif Respuesta==2:
          print("Productos por reseña en el servicio")
          Respuesta_2=str(input("Introduce una opcion \n"))
          print("""
          e:	Lista con los 5 productos con mejor reseña
          f:	Lista con los 5 productos con peor reseña\n""")
          print("\n"*50)
          if Respuesta_2=="e":
            print("Top 5 productos con mejor reseña\n")
            print(Cal_promedio.head(n=5))
            input("\nEnter para continuar...\n")
          elif Respuesta_2=="f":
            print("Top 5 productos con peor reseña\n")
            print(Cal_promedio.tail(n=5))
            input("\nEnter para continuar...\n")
          else:
            print("no ingresaste una opcion valida")
        ########################################################################################################################
        ########################################################################################################################

        elif Respuesta==3:
          print("Total, de ingresos y ventas promedio mensuales, total anual y meses con más ventas al año")
          print("""
          g:	Tabla con total de ingresos y ventas mensuales
          h:	Total anual
          i:	Meses con mayores ventas\n
          """)
          Respuesta_3=str(input("Introduce una opcion \n"))
          print("\n"*50)
          if Respuesta_3=="g":
            print("Tabla con total de ingresos y ventas mensuales\n")
            print("Ventas mensuales son:\n\n",meses_ventas)
            plot_ventas()
            input("\nEnter para continuar...\n")
          elif Respuesta_3=="h":
            print("Total anual\n")
            print("Ventas anuales son:\n\n",meses_ventas.Ventas.sum())
            input("\nEnter para continuar...\n")
          elif Respuesta_3=="i":
            print("Meses con mayores ventas\n")
            print("Ventas mensuales son:\n\n",meses_ventas.sort_values('Ventas',ascending=False))
            input("\nEnter para continuar...\n")
          else:
            print("no ingresaste una opcion valida")
      else:
        print("No excribiste ninguna opcion valida")

  else :
    print("No escribiste una opcion valida")

